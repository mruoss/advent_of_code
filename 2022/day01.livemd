# Advent of Code 2022 - Day 1

```elixir
Mix.install([:kino, {:kino_aoc, git: "https://github.com/ljgago/kino_aoc"}])
```

## Input

```elixir
test_input_field = Kino.Input.textarea("input")
```

<!-- livebook:{"attrs":{"day":"1","session_secret":"AOC_SESSION","variable":"puzzle_input","year":"2022"},"kind":"Elixir.KinoAOC.HelperCell","livebook_object":"smart_cell"} -->

```elixir
{:ok, puzzle_input} = KinoAOC.download_puzzle("2022", "1", System.fetch_env!("LB_AOC_SESSION"))
```

```elixir
input_field =
  Kino.Input.select("input", [
    {Kino.Input.read(test_input_field), "test_input"},
    {puzzle_input, "puzzle_input"}
  ])
```

## Parsing

```elixir
ren_calories =
  input_field
  |> Kino.Input.read()
  |> String.split("\n")
  |> Enum.chunk_while(
    0,
    fn
      "", sum -> {:cont, sum, 0}
      nr, sum -> {:cont, sum + String.to_integer(nr)}
    end,
    &{:cont, &1, nil}
  )
```

## Part 1

```elixir
Enum.max(ren_calories)
```

## Part 2

```elixir
ren_calories |> Enum.sort(&(&1 > &2)) |> Enum.take(3) |> Enum.sum()
```
